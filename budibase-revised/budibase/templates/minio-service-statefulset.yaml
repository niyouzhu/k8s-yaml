{{- if .Values.services.objectStore.minio }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.kompose.service: minio-service
  name: minio-service
spec:
  replicas: 1
  serviceName: minio-service
  selector:
    matchLabels:
      io.kompose.service: minio-service
  template:
    metadata:
      labels:
        io.kompose.service: minio-service
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_BROWSER
          value: {{ .Values.services.objectStore.browser | quote }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreAccess
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreSecret

        image: dhub.kubesre.xyz/minio/minio
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 20
        name: minio-service
        ports:
        - containerPort: {{ .Values.services.objectStore.port }}
        {{ with .Values.services.objectStore.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{ end }}
        volumeMounts:
        - mountPath: /data
          name: minio-data
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{ if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{ end }}
      {{ if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      {{ end }}
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data
  volumeClaimTemplates:
    - metadata:
        name: minio-data
        labels:
      spec:
        accessModes:
        {{- range .Values.objectStore.persistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.objectStore.persistentVolume.size | quote }}
      {{- if .Values.objectStore.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.objectStore.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.objectStore.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}          
{{- end }}
