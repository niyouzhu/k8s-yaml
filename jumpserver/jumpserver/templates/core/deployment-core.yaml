{{- if .Values.core.enabled }}
{{- with .Values.core }}
{{- $fullName := printf "%s-%s" (include "jumpserver.fullname" $) "jms-core" }}
{{- $containerName := "jms-core" }}
{{- $image := printf "%s" (include "jumpserver.coreImage" $) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "jumpserver.labels" $ | nindent 4 }}
    {{- toYaml .labels | nindent 4 }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jumpserver.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      {{- toYaml .labels | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jumpserver.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        {{- toYaml .labels | nindent 8 }}
    spec:
      {{- if $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml $.Values.global.imagePullSecrets }}
      {{- end }}
      serviceAccountName: {{ template "jumpserver.serviceAccountName" $ }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $containerName }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: {{ $image }}
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- with .command }}
          command:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          args: ["start", "web"]
          env:
            - name: SECRET_KEY
              value: {{ required "A valid secretKey is required!" .config.secretKey | quote }}
            - name: BOOTSTRAP_TOKEN
              value: {{ required "A valid bootstrapToken is required!" .config.bootstrapToken | quote }}
            - name: DEBUG
              value: {{ .config.debug | quote }}
            - name: LOG_LEVEL
              value: {{ .config.log.level | quote }}
            - name: HTTP_LISTEN_PORT
              value: {{ .service.web.port | quote }}
            - name: WS_LISTEN_PORT
              value: {{ .service.ws.port | quote }}
            - name: DB_ENGINE
              value: {{ include "jumpserver.database.engine" $ | quote }}
            - name: DB_HOST
              value: {{ include "jumpserver.database.host" $ | quote }}
            - name: DB_PORT
              value: {{ include "jumpserver.database.port" $ | quote }}
            - name: DB_USER
              value: {{ include "jumpserver.database.user" $ | quote }}
            - name: DB_PASSWORD
              value: {{ include "jumpserver.database.password" $ | quote }}
            - name: DB_NAME
              value: {{ include "jumpserver.database.database" $ | quote }}
            - name: REDIS_HOST
              value: {{ include "jumpserver.redis.host" $ | quote }}
            - name: REDIS_PORT
              value: {{ include "jumpserver.redis.port" $ | quote }}
            - name: REDIS_PASSWORD
              value: {{ include "jumpserver.redis.password" $ | quote }}
            {{- range $key, $val := .env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          ports:
            - name: web
              containerPort: {{ .service.web.port }}
              protocol: TCP
            - name: ws
              containerPort: {{ .service.ws.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/opt/jumpserver/config.yml"
              name: "jms-core-config"
              subPath: "config.yml"
            - mountPath: "/opt/jumpserver/data"
              name: "jms-core-data"
              {{- if .persistence.subPath }}
              subPath: {{ .persistence.subPath | quote }}
              {{- end }}
            - mountPath: "/opt/jumpserver/logs"
              name: "jms-core-logs"
              {{- if .persistence.subPath }}
              subPath: {{ .persistence.subPath | quote }}
              {{- end }}
          {{- with .volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      restartPolicy: Always
      volumes:
        - configMap:
            name: '{{ include "jumpserver.fullname" $ }}-jms-core'
          name: "jms-core-config"
        - persistentVolumeClaim:
            {{- if .persistence.existingClaim }}
            claimName: {{ .persistence.existingClaim | quote }}
            {{- else }}
            claimName: '{{ include "jumpserver.fullname" $ }}-jms-core-data'
            {{- end }}
          name: "jms-core-data"
        - persistentVolumeClaim:
            claimName: '{{ include "jumpserver.fullname" $ }}-jms-core-logs'
          name: "jms-core-logs"
      {{- with .volumes }}
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
{{- end }}
